name: Java CI with Gradle and Docker

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    # 1. GitHub 레포지토리 체크아웃
    - uses: actions/checkout@v3

    # 2. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean bootJar

    # 4. Docker 이미지 빌드
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fundboost:latest .

    # 5. DockerHub 로그인
    - name: DockerHub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 6. DockerHub 이미지 푸시
    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/fundboost:latest

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      # 1. 최신 이미지를 EC2에 Pull
      - name: Pull Docker Image
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fundboost:latest

      # 2. Port 8080 사용 중지
      - name: Free up Port 8080
        run: |
          if lsof -i:8080; then
            echo "Freeing up port 8080..."
            sudo fuser -k 8080/tcp
          fi

      # 3. 기존 컨테이너 중지 및 삭제
      - name: Stop and Remove Existing Container
        run: |
          container_id=$(sudo docker ps -a -q -f name=fundboost-app)
          if [ "$container_id" ]; then
            echo "Stopping and removing existing container..."
            sudo docker stop "$container_id"
            sudo docker rm "$container_id"
          else
            echo "No existing container found. Skipping removal."
          fi

      # 4. 새 컨테이너 실행
      - name: Run New Container
        run: sudo docker-compose up -d
      # 5. 사용하지 않는 Docker 리소스 정리
      - name: Clean Up Unused Docker Resources
        run: sudo docker system prune -f
